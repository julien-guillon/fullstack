version: '3.8'

services:
  php:
    build:
      context: ./api
      target: php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-api-platform}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-api}?serverVersion=${POSTGRES_VERSION:-13}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}|nginx$$

  database:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD=!ChangeMe!
      - POSTGRES_USER=api-platform
    volumes:
      - db_data:/var/lib/postgresql/data:rw
      #- ./api/docker/db/data:/var/lib/postgresql/data:rw

  pwa:
    build:
      context: ./pwa
      target: pwa_dev
    volumes:
      - ./pwa:/usr/src/pwa:rw,cached
    ports:
      - '3000:3000'
    environment:
      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://nginx
      NEXT_PUBLIC_ENTRYPOINT: http://nginx

  nginx:
    build:
      context: api/
      target: nginx
    depends_on:
      - php
      - pwa
    environment:
      PWA_UPSTREAM: pwa:3000
      SERVER_NAME: ${SERVER_NAME:-localhost, nginx:80}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      #- ./api/docker/nginx/certs:/etc/nginx/ssl:ro
    ports:
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp

volumes:
  php_socket:
  db_data: